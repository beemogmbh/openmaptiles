layer:
  id: "naviki_poi"
  description: naviki layer points of interest
  #standard for poi layer
  buffer_size: 64
  fields:
    name: The OSM key:name value.
    name_en: English name `name:en` if available, otherwise `name`.
    name_de: German name `name:de` if available, otherwise `name` or `name:en`.
    category: Naviki category for this poi.
    website: The website link
    rank: |
        The POIs are ranked ascending according to their importance within a grid. The `rank` value shows the
        local relative importance of a POI within it's cell in the grid. This can be used to reduce label density at *z14*.
        Since all POIs already need to be contained at *z14* you can use `less than rank=10` epxression to limit
        POIs. At some point like *z17* you can show all POIs.
    level:
      description: |
          Original value of [`level`](http://wiki.openstreetmap.org/wiki/Key:level) tag.
    layer:
      description: |
          Original value of [`layer`](http://wiki.openstreetmap.org/wiki/Key:layer) tag.
    indoor:
      description: |
          Original value of [`indoor`](http://wiki.openstreetmap.org/wiki/Key:indoor) tag.
      values:
      - 1
    osm_id: ID. 
  datasource:
    geometry_field: geometry
    key_field: osm_id
    key_field_as_attribute: no
    query: (SELECT osm_id, geometry, name, name_en, name_de, category, website, layer, level, indoor, rank FROM layer_naviki_poi(!bbox!, z(!scale_denominator!), !pixel_width!)) AS t
schema:
  #- ./poi_stop_agg.sql
  #- ./public_transport_stop_type.sql
  #- ./update_poi_point.sql
  - ./update_poi_polygon.sql
  - ./layer.sql
datasources:
  - type: imposm3
    mapping_file: ./mapping.yaml
